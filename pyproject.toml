[build-system]
requires = ["setuptools>=77", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "bip_utils"
dynamic = ["version", "dependencies", "optional-dependencies"]
authors = [
    {name = "Emanuele Bellocchia", email = "ebellocchia@gmail.com"}
]
maintainers = [
    {name = "Emanuele Bellocchia", email = "ebellocchia@gmail.com"}
]
description = "Generation of mnemonics, seeds, private/public keys and addresses for different types of cryptocurrencies"
readme = "README.md"
license = "MIT"
license-files = [
    "LICENSE",
]
requires-python = ">=3.7"
keywords = [
    "python",
    "cryptography",
    "ecdsa",
    "ed25519",
    "ed25519-blake2b",
    "nist256p1",
    "secp256k1",
    "sr25519",
    "wallet",
    "hd-wallet",
    "slip10",
    "slip32",
    "bip38",
    "bip39",
    "bip39-substrate",
    "bip32",
    "bip44",
    "bip49",
    "bip84",
    "bip86",
    "bip173",
    "bip350",
    "brainwallet",
    "base58",
    "ss58",
    "bech32",
    "bech32m",
    "segwit",
    "electrum",
    "substrate",
    "taproot",
    "daedalus",
    "byron",
    "shelley",
    "akash",
    "algorand",
    "aptos",
    "arbitrum",
    "atom",
    "avalanche",
    "avax",
    "axelar",
    "band protocol",
    "binance chain",
    "binance smart chain",
    "bitcoin",
    "bitcoin cash",
    "bitcoinsv",
    "bnb",
    "cardano",
    "cardano-byron",
    "cardano-shelley",
    "celestia",
    "celo",
    "certik",
    "cosmos",
    "dash",
    "dogecoin",
    "dydx",
    "ecash",
    "elrond",
    "eos",
    "ethereum",
    "ethereum classic",
    "fantom opera",
    "fetch.ai",
    "filecoin",
    "harmony one",
    "huobi chain",
    "icon",
    "injective",
    "iris",
    "irisnet",
    "kava",
    "litecoin",
    "matic",
    "mavryk",
    "metis",
    "monero",
    "multiversx",
    "nano",
    "near",
    "near protocol",
    "neo",
    "neutron",
    "nimiq",
    "okex chain",
    "ontology",
    "optimism",
    "osmosis",
    "pi network",
    "polygon",
    "ripple",
    "secret",
    "solana",
    "stellar",
    "substrate",
    "sui",
    "terra",
    "tezos",
    "theta",
    "tron",
    "vechain",
    "verge",
    "zcash",
    "zilliqa",
    "acala",
    "bifrost",
    "chainx",
    "edgeware",
    "karura",
    "kusama",
    "moonbeam",
    "moonriver",
    "phala",
    "plasm",
    "sora",
    "stafi",
    "polkadot",
]
classifiers = [
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Development Status :: 5 - Production/Stable",
    "Operating System :: OS Independent",
    "Intended Audience :: Developers",
]

[project.urls]
Homepage = "https://github.com/ebellocchia/bip_utils"
Changelog = "https://github.com/ebellocchia/bip_utils/blob/master/CHANGELOG.md"
Repository = "https://github.com/ebellocchia/bip_utils"
Download = "https://github.com/ebellocchia/bip_utils/archive/v{version}.tar.gz"
Documentation = "https://bip-utils.readthedocs.io"

[tool.setuptools]
packages = {find = {exclude =  ["benchmark*", "docs*", "examples*", "readme*", "tests*"]}}

[tool.setuptools.package-data]
bip_utils = [
    "bip/bip39/wordlist/*.txt",
    "electrum/mnemonic_v1/wordlist/*.txt",
    "monero/mnemonic/wordlist/*.txt",
]

[tool.setuptools.dynamic]
version = {attr = "bip_utils._version.__version__"}
dependencies = {file = ["requirements.txt"]}
optional-dependencies.develop = {file = ["requirements-dev.txt"]}

[tool.mypy]
ignore_missing_imports = true
exclude = "(?x)(\\.github|\\.eggs|\\.tox|benchmark|build|docs|examples|readme|tests|my_tests|venv)"
